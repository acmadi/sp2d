<?php
use App\Dokumens;
use App\Jenissppd;
use App\Skpd;

Event::listen('illuminate.query', function($query)
{
  // echo "<pre>";
    var_dump($query); 
});
/*
|--------------------------------------------------------------------------
| Application Routes 
|--------------------------------------------------------------------------
|
| Here is where you can register all of the routes for an application.
| It's a breeze. Simply tell Laravel the URIs it should respond to
| and give it the controller to call when that URI is requested.
|
*/
function easy($file='')
{
	return view('easy.layout.'.$file);
}
function easyc($file='')
{
	return view('easy.content.'.$file);
}

// Route::get('/', function () {
//     return view('welcome');
// });

// dd($_ENV);
// dd();
// echo phpinfo();
// dd(app()->environment());

/* DEMO ROUTE==========================================================================================*/
if (app()->environment()=='demo') {echo 'demo'; 
	$router->get('/', function() {
		// $url = route('prefAdmin', ['id' => 1]);
		// dd($url);
	});
	$router->get('db/', function() use ($router) {
		// $results = \Db::select("SELECT * FROM dokumen");
		// dd(app('db'));
		// var_dump($results[0]);
	});
}
/* PRODUCTION ROUTE==========================================================================================*/
if (app()->environment()=='production') {

	$router->get('/', function() {
	echo 'production';
		
	});
}
// {{route('profile', ['page' => ''])}}
/* LOCAL AND DEVELOPMENT ROUTE==========================================================================================*/

if (app()->environment()=='local') {
	// echo 'local';

	$router->get('/', ['as'=>'home',function() {
			return view('easy.layout.app', ['xcontent'=> easyc('home')]);
		}]);
	$router->get('grid/{page}', ['as'=>'pagegrid',function($page='home') {
			return view('easy.layout.app', ['xcontent'=> easyc($page)]);
		}]);
	$router->get('ajax/{page}', ['as'=>'ajaxgrid', function($page='home') {
			$request= new Request();
					return easyc($page);
	
		}]);
	$router->get('/homec', function() {
		return view('easy.layout.app', ['xcontent'=> view('easy.layout.xcontent')]);

	});
	Route::resource('skpd', 'SkpdController');
	Route::controller('skpd-Data', 'SkpdController', [
	    'anyData' => 'skpd.data',
	    'anyCombobox' => 'suplay.skpd.combobox',
	]);
	Route::resource('dokumens', 'DokumensController');
	Route::controller('dokumens-Data', 'DokumensController', [
	    'anyData' => 'dokumens.data',
	]);
	Route::resource('jenis-sppd', 'JenissppdController');
	Route::controller('jenis-sppd-data', 'JenissppdController', [
	    'anyData' => 'jenis-sppd.data',
	    'anyCombobox' => 'suplay.jenis-sppd.combobox',
	]);
	Route::resource('unit-kerja', 'UnitkerjaController');
	Route::controller('unit-kerja-data', 'UnitkerjaController', [
	    'anyData' => 'unit-kerja.data',
	]);


	Route::resource('penerima', 'PenerimaController');
	Route::controller('penerima-Data', 'PenerimaController', [
	    'anyData' => 'penerima.data',
	    'anyCombobox' => 'suplay.penerima.combobox',
	]);
}

Route::get('api/csrf', function() {
    return csrf_token();
});

//  Route::get('/', array('as' => 'home', function()
// {
//     return View::make('home');
// }))

/*  file image==============================================================================================================================*/
Route::get('file', 'FileController@index');
Route::get('file/get/{filename}', [
	'as' => 'file.get', 'uses' => 'FileController@get']);
Route::post('file/add',[ 
        'as' => 'file.add', 'uses' => 'FileController@add']);


$tbl = <<<EOD
<table cellspacing="0" cellpadding="1" border="1">
    <tr>
        <td rowspan="3">COL 1 - ROW 1<br />COLSPAN 3</td>
        <td>COL 2 - ROW 1</td>
        <td>COL 3 - ROW 1</td>
    </tr>
    <tr>
    	<td rowspan="2">COL 2 - ROW 2 - COLSPAN 2<br />text line<br />text line<br />text line<br />text line</td>
    	<td>COL 3 - ROW 2</td>
    </tr>
    <tr>
       <td>COL 3 - ROW 3</td>
    </tr>

</table>
EOD;

Route::get('pdf', function()
{
	PDF::SetMargins(40, 20, 30, 8);
	// PDF::SetTitle('Hello World');

	PDF::AddPage();

	// PDF::Write(0, 'Hello World');
	PDF::SetFont('helvetica', '', 12);
		// $tbl = '
		// <table cellspacing="0" cellpadding="1" border="1">
		//     <tr>
		//         <td rowspan="3">COL 1 - ROW 1<br />COLSPAN 3</td>
		//         <td>COL 2 - ROW 1</td>
		//         <td>COL 3 - ROW 1</td>
		//     </tr>
		//     <tr>
		//     	<td rowspan="2">COL 2 - ROW 2 - COLSPAN 2<br />text line<br />text line<br />text line<br />text line</td>
		//     	<td>COL 3 - ROW 2</td>
		//     </tr>
		//     <tr>
		//        <td>COL 3 - ROW 3</td>
		//     </tr>

		// </table>
		// ';
	// $table=view('laporan.laporan_menurut_tahun_periode');
	$header=view('laporan.header');
	$isi=view('laporan.isi');
	// return view('laporan.laporan_menurut_tahun_periode');

	// PDF::writeHTML($table, true, false, false, false, '');
	PDF::writeHTML($header, true, false, false, false, '');
	PDF::SetFont('helvetica', '', 8);
	PDF::writeHTML($isi, true, false, false, false, '');

	PDF::Output('hello_world.pdf');
	
});
Route::get('lap/{jenis}', function ($jenis='1')
{
	// $lap1=Dokumens::count('tahun')->groupBy('tahun')->get()->toArray();
	// dd($lap1);
	if ($jenis==1) {
		$users = DB::table('dokumen')
		                     ->select(DB::raw('tahun, count(dokumen.tahun) as jumlah, SUM(dokumen.spm_benar) as spm'))
		                     // ->where('status', '<>', 1)
		                     ->groupBy('tahun')
		                     ->get();
	    dd($users);
	}
	if ($jenis==2) {
		// $users = Jenissppd::with('dokumens')->get();
	    // dd($users);
	    $users = DB::table('dokumen')
		                     ->select(DB::raw('tahun, count(dokumen.tahun) as jumlah, SUM(dokumen.spm_benar) as spm, jenis_sppd_id'))
		                     // ->where('status', '<>', 1)
		                     ->groupBy('jenis_sppd_id')
		                     ->get();
	    dd($users);
		
		               
	}
	if ($jenis==3) {
		// $users = Jenissppd::with('dokumens')->get();
	    // dd($users);
	    $users = DB::table('dokumen')
		                     ->select(DB::raw('dokumen.tahun,
								Count(dokumen.no_sppd) AS SPM_jumlah,
								Sum(dokumen.spm_diajukan) AS SPM_NILAI,
								Sum(dokumen.potongan) AS SPM_POTONGAN,
								Count(dokumen.no_sppd) AS SPPD_JUMLAH,
								Count(dokumen.spm_benar) AS SPPD_NILAI,
								dokumen.no_sppd,
								dokumen.keterangan'
								))
		                     ->where('tahun', '=', 2010)
		                     ->groupBy('skpd_id')
		                     ->get();
	    dd($users);
		
		               
	}
	if ($jenis==4) {
		// $users = Jenissppd::with('dokumens')->get();
	    // dd($users);
	    $users = DB::table('dokumen')
		                     ->select(DB::raw(
		                     	'dokumen.tahun,
									Count(dokumen.no_sppd) AS SPM_jumlah,
									Sum(dokumen.spm_diajukan) AS SPM_NILAI,
									Sum(dokumen.potongan) AS SPM_POTONGAN,
									Count(dokumen.no_sppd) AS SPPD_JUMLAH,
									Sum(dokumen.spm_benar) AS SPPD_NILAI,
									dokumen.no_sppd,
									dokumen.keterangan'
								))
		                     ->where('tahun', '=', 2010)
		                     ->where('skpd_id', '=', 2)
		                     ->groupBy('jenis_sppd_id')
		                     ->get();
	    dd($users);
		
		               
	}
	$users = DB::table('users')->count();
	
	$price = DB::table('orders')->max('price');
	
	// Of course, you may combine these methods with other clauses to build your query:
	
	// $price = DB::table('orders')
	//                 ->where('finalized', 1)
	//                 ->avg('price');
});