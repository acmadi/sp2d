<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;

use App\Http\Requests;
use App\Http\Controllers\Controller;
use App\Dokumens;
use App\File;

class DokumensController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return Response
     */
// jenis_sppd_id_ck keperluam_ck
// no_sppd_ck  
// penerima_id_ck  
// skpd_ck 
// thn_ck  
    // public $cari;
    // const tokenx=['token'=>csrf_token()];
    // public $token = array('token'=>csrf_token());
    
  

    function __construct()
    {
        $this->caris=['jenis_sppd_id', 'keperluam', 'no_sppd', 'penerima_id', 'skpd', 'tahun'];

    }
    public function index()
    {
        return __function__;
        //
    }
    
    
    public function anyData(Request $req)
    {
        // print_r($req->all());
        // dd();
        // $data = Dokumens::all();
        // $count = App\Flight::where('active', 1)->count();

        $data = \DB::table('dokumen');
        /*pencarian data ===============================*/

        if ($req->get('cari')) {
            $i=0;
            foreach ($this->caris as $key =>$cari) {
                        // echo $req->get($cari.'_ck');
                        // echo $cari.'--'.$req->get($cari.'_ck');
                    if ($req->get($cari.'_ck')=='on') {
                                // echo "ada";
                            if ($i==0) {
                                $data->where($cari,'like',$req->get($cari).'%');
                                $i++;
                            }
                            elseif($i !== 0){
                                $data->orWhere($cari,'like',$req->get($cari).'%');
                                
                            }

                    }
                // else{
                //     if ($req->get($cari.'_ck')=='on') {
                //     $data->orWhere($cari,'like',$req->get($cari).'%');
                        
                //     }
                }
            
           // $result=$data ->where('skpd_id', '=', $req->get('filter_skdp_id'))->get();
            // $['rows']=$result;
            // dd($data);
            // dd($data->get());
           return $data->get();
        }
        /* paging biasa ======================================*/
        if ($req->get('page')) {
            $data->skip($req->get('page'));
        }
        if ($req->get('rows')) {
            $data->take($req->get('rows'));
            
        }
        $datax['rows']=$data->get();
        $total['total'] = \DB::table('dokumen')->count();
      
        // dd($data->get());
        return $total+$datax+['token'=>csrf_token()];
        //
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return Response
     */
    public function create()
    {
        return __function__;
        //
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  Request  $request
     * @return Response
     */
    public function store(Request $req)
    {
        // dd($request->all());
        // $this->filehandle($req);

        $data_dokumen=new Dokumens();
        foreach ($data_dokumen->getColoumn() as  $kolom) {
                 $data_dokumen->$kolom = $req->get($kolom) ;
        }
        // $data_dokumen->skpd_id= $request->skpd_id;
        // $data_dokumen->nama_unit_kerja= $request->nama_unit_kerja;
        // $data_dokumen->nama_singkat_unit_kerja= $request->nama_singkat_unit_kerja;
        $data_dokumen->save();
        if ($data_dokumen->id) {
             $this->filehandle($req,$data_dokumen->id);
        // $data['code']=200;
        // $data['msg']='Tambah data SUkses';
         return 'Tambah Data Unit  Kerja '.$data_dokumen->no_sppd.' dengan nama singkat '.$data_dokumen->keperluan.' Sukses' ;
            
        }
        else{
         return 'Gagal Menambahkan data' ;

        }

        return __function__;
        //
    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return Response
     */
    public function show($id)
    {
        return __function__;
        //
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return Response
     */
    public function edit($id)
    {
        // dd(url('file/get').'/xx.jpg');
        $data = Dokumens::find($id);
        $v_data=$data->toArray();
        // dd($data);
            if (count($data->file()->get()->toArray())) {
                // dd($data->file()->get());
                  $image['image'] = '<img src="'.route('file.get',['filename'=>$data->file()->get()[0]->filename]).'" alt="'.$data->file()->get()[0]->filename.'">';
            }
            else{
                  $image['image'] = '<img src="xx.jpg" alt="xx.jpg">';
            }
        // $image = $data->file()->get()[0]->filename;
        // dd($image[0]->filename);
        return $v_data+$image;
        return __function__;
        //
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  Request  $request
     * @param  int  $id
     * @return Response
     */
    public function filehandle($req,$id)
    {
         $file = $req->file('gambar');
            
         if ($file) {
             $extension = $file->getClientOriginalExtension();
            if( \Storage::disk('local')->put($file->getFilename().'.'.$extension,  \File::get($file))){

                 $entry = File::where('dokumen_id',$id);
                 if(count($entry->get()->toArray())){
                 dd(count($entry->get()->toArray()));
                     // $entry=File::find($entry->id);
                     // dd($entry->with('dokumen')->get());
                     // dd($entry->get()->toArray()[0]['filename']);
                     \Storage::delete($entry->get()->toArray()[0]['filename']);

                    $update= ['mime' => $file->getClientMimeType(),
                                     'original_filename' => $file->getClientOriginalName(),
                                     'filename' => $file->getFilename().'.'.$extension];
                     if ($entry->update($update)) {
                        return true;
                     }
                     return false;
                 }
                 else{
                     $entry=new File();
                     $entry->dokumen_id = $id;
                     $entry->mime = $file->getClientMimeType();
                     $entry->original_filename = $file->getClientOriginalName();
                     $entry->filename = $file->getFilename().'.'.$extension;
                     if ($entry->save()) {
                         return true;
                     }
                     return false;
                     
                 }
             
            }
            
         }
    }
    public function update(Request $req, $id)
    {

        // dd($req->all());
        $this->filehandle($req,$id);
        $data_dokumen = Dokumens::find($id);
        // dd($data_dokumen);
        if ($data_dokumen) {
            $data_dokumen_pesan_to_view=$data_dokumen->nama_dokument;
            foreach ($data_dokumen->getColoumn() as  $kolom) {
                     $data_dokumen->$kolom = $req->get($kolom) ;
            }
            // $data_dokumen->nama_unit_kerja = $req->get('nama_unit_kerja') ;
            // $data_dokumen->nama_singkat_unit_kerja = $req->get('nama_singkat_unit_kerja') ;
            $data_dokumen->save();

                $cek=Dokumens::find($id);
            
            // if ( $data_dokumen_pesan_to_view !==  $cek->nama_unit_kerja) {
            if ( $data_dokumen  !==  $cek) {
                    return 'Update nama skpd '.$data_dokumen->penerima.' ke '.$data_dokumen_pesan_to_view.' sukses';
                }
            else{
                    return 'Update nama skpd '.$data_dokumen->nama_unit_kerja.' ke '.$req->nama_unit_kerja.' Gagal / nilainya sama ';
            } 
         }
         else{
                    return 'Gatal data tidak ditemukan';

            }      
        return __function__;
        
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return Response
     */
    public function destroy($id)
    {
   
          $data_dokumen=Dokumens::find($id);
          $data_dokumen_pesan=Dokumens::find($id);
          // dd($data_dokumen_pesan->nama_skpd);
        if ($data_dokumen) {
           $data_dokumen->delete();
           // echo "delete";
        }
          $data_dokumenx=Dokumens::find($id);

        if (!$data_dokumenx) {
           return 'Sukses data SPPD  '.$data_dokumen_pesan->no_sppd;
        }
        else{
           return 'gagal data SPPD  '.$data_dokumen_pesan->no_sppd;
            
        }
 
        return __function__;
        //
    }

}
